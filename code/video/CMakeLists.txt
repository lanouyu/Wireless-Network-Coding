cmake_minimum_required(VERSION 2.8)  

project(test_cpp)  
set(OpenCV_DIR /usr/local/lib) 
set(LibRaptorQ_DIR L/home/blue/libRaptorQ-0.1.X/lib)
find_package(OpenCV REQUIRED)
find_package(Eigen3 REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR})
add_executable(test_cpp test_cpp.cpp)  
add_definitions(-std=c++11)
target_link_libraries(test_cpp ${OpenCV_LIBS})
target_link_libraries(test_cpp ${LibRaptorQ_LIBS})
target_link_libraries(test_cpp RaptorQ)
target_link_libraries(test_cpp m)
target_link_libraries(test_cpp pthread)


project(test_split)  
set(OpenCV_DIR /usr/local/lib) 
set(LibRaptorQ_DIR L/home/blue/libRaptorQ-0.1.X/lib)
find_package(OpenCV REQUIRED)
find_package(Eigen3 REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR})
add_executable(test_split test_split.cpp)  
add_definitions(-std=c++11)
target_link_libraries(test_split ${OpenCV_LIBS})
target_link_libraries(test_split ${LibRaptorQ_LIBS})
target_link_libraries(test_split RaptorQ)
target_link_libraries(test_split m)
target_link_libraries(test_split pthread)

project(sym_send)  
set(OpenCV_DIR /usr/local/lib) 
set(LibRaptorQ_DIR L/home/blue/libRaptorQ-0.1.X/lib)
find_package(OpenCV REQUIRED)
find_package(Eigen3 REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR})
add_executable(sym_send sym_send.cpp)  
add_definitions(-std=c++11)
target_link_libraries(sym_send ${OpenCV_LIBS})
target_link_libraries(sym_send ${LibRaptorQ_LIBS})
target_link_libraries(sym_send RaptorQ)
target_link_libraries(sym_send m)
target_link_libraries(sym_send pthread)

project(sym_receive)  
set(OpenCV_DIR /usr/local/lib) 
set(LibRaptorQ_DIR L/home/blue/libRaptorQ-0.1.X/lib)
find_package(OpenCV REQUIRED)
find_package(Eigen3 REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR})
add_executable(sym_receive sym_receive.cpp)  
add_definitions(-std=c++11)
target_link_libraries(sym_receive ${OpenCV_LIBS})
target_link_libraries(sym_receive ${LibRaptorQ_LIBS})
target_link_libraries(sym_receive RaptorQ)
target_link_libraries(sym_receive m)
target_link_libraries(sym_receive pthread)

project(lnet_send)  
set(OpenCV_DIR /usr/local/lib) 
set(LibRaptorQ_DIR L/home/blue/libRaptorQ-0.1.X/lib)
find_package(OpenCV REQUIRED)
find_package(Eigen3 REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR})
add_executable(lnet_send lnet_send.cpp)  
add_definitions(-std=c++11)
target_link_libraries(lnet_send ${OpenCV_LIBS})
target_link_libraries(lnet_send ${LibRaptorQ_LIBS})
target_link_libraries(lnet_send RaptorQ)
target_link_libraries(lnet_send m)
target_link_libraries(lnet_send pthread)
target_link_libraries(lnet_send net)
target_link_libraries(lnet_send pcap)

project(lnet_recv)  
set(OpenCV_DIR /usr/local/lib) 
set(LibRaptorQ_DIR L/home/blue/libRaptorQ-0.1.X/lib)
find_package(OpenCV REQUIRED)
find_package(Eigen3 REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR})
add_executable(lnet_recv lnet_recv.cpp)  
add_definitions(-std=c++11)
target_link_libraries(lnet_recv ${OpenCV_LIBS})
target_link_libraries(lnet_recv ${LibRaptorQ_LIBS})
target_link_libraries(lnet_recv RaptorQ)
target_link_libraries(lnet_recv m)
target_link_libraries(lnet_recv pthread)
target_link_libraries(lnet_recv net)
target_link_libraries(lnet_recv pcap)

project(sock_send)  
set(OpenCV_DIR /usr/local/lib) 
set(LibRaptorQ_DIR L/home/blue/libRaptorQ-0.1.X/lib)
find_package(OpenCV REQUIRED)
find_package(Eigen3 REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR})
add_executable(sock_send sock_send.cpp)  
add_definitions(-std=c++11)
target_link_libraries(sock_send ${OpenCV_LIBS})
target_link_libraries(sock_send ${LibRaptorQ_LIBS})
target_link_libraries(sock_send RaptorQ)
target_link_libraries(sock_send m)
target_link_libraries(sock_send pthread)

project(sock_recv)  
set(OpenCV_DIR /usr/local/lib) 
set(LibRaptorQ_DIR L/home/blue/libRaptorQ-0.1.X/lib)
find_package(OpenCV REQUIRED)
find_package(Eigen3 REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR})
add_executable(sock_recv sock_recv.cpp)  
add_definitions(-std=c++11)
target_link_libraries(sock_recv ${OpenCV_LIBS})
target_link_libraries(sock_recv ${LibRaptorQ_LIBS})
target_link_libraries(sock_recv RaptorQ)
target_link_libraries(sock_recv m)
target_link_libraries(sock_recv pthread)
